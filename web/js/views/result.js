// Generated by CoffeeScript 1.7.1
define(['jquery', 'ma', 'api', 'utils', 'vv', 'text!templates/result.html'], function($, ma, api, utils, vv, template) {
  var ResultView;
  return ResultView = Backbone.View.extend({
    el: $('body'),
    model: null,
    initialize: function(options) {
      return this.model = options.data;
    },
    render: function() {
      console.log(this.model);
      this.$el.html(_.template(template)(this.model));
      vv.work();
      this.map();
      return this.picture();
    },
    map: function() {
      var counter, thiz;
      thiz = this;
      counter = 1;
      return _.each($('div.map'), function(map) {
        setTimeout(function() {
          var a, attractions, coords, currentMap, index, marker, _i, _len, _results;
          currentMap = new google.maps.Map(map, {
            zoom: 12,
            center: {
              lat: $(map).data('lat'),
              lng: $(map).data('lng')
            }
          });
          index = $(map).data('index');
          index = parseInt(index);
          attractions = thiz.model.cities[index].attractions;
          _results = [];
          for (_i = 0, _len = attractions.length; _i < _len; _i++) {
            a = attractions[_i];
            coords = new google.maps.LatLng(a.latitude, a.longitude);
            _results.push(marker = new google.maps.Marker({
              position: coords,
              map: currentMap,
              title: a.name
            }));
          }
          return _results;
        }, counter * 3000);
        return counter++;
      });
    },
    picture: function() {
      var counter;
      counter = 1;
      return _.each($('img.attraction'), function(img) {
        setTimeout(function() {
          return api.getPhoto($(img).data('name'), $(img).data('address'), function(url) {
            if (url != null) {
              return $(img).attr('src', url);
            }
          });
        }, counter * 400);
        return counter++;
      });
    }
  });
});
